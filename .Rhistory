View(tmp_dtf_price)
## utility functions
## based on the reginoal url to construct all pages
construct_region_link_nzg <-
function( region_base_url, sleep_time = 2 ){
## start page
remDr$navigate(region_base_url)
Sys.sleep(sleep_time )
more_page <- remDr$findElements(using = 'class name',value = 'more-pages-menu')
tmp_page_txt <- more_page[[1]]$getElementText()[[1]]
if(tmp_page_txt != ""){
tmp_page_num <- str_extract_all(tmp_page_txt, "\\d+")[[1]]
tmp_page_num_ind <- strsplit(tmp_page_num, split = "")[[1]]
tmp_page_num_ind <- tmp_page_num_ind[1:(length(tmp_page_num_ind)-1)]
tmp_all_links <- paste0(region_base_url, "?pos=", tmp_page_num_ind)
return( c(region_base_url, tmp_all_links) )
}else{
return(region_base_url)
}
}
### based on all regional links to get all girls
construct_girl_link_nzg <-
function( region_link, sleep_time = 2){
## start page
remDr$navigate(region_link)
Sys.sleep(sleep_time )
## find girls card
tmp_girl_card <- remDr$findElements(using = 'css selector',value = '.wrap-link.esc-link')
## find href
tmp_list <- lapply( tmp_girl_card,
function(i_girl){
i_girl$getElementAttribute("href")
} )
return( unlist(tmp_list) )
}
## construct girls info from nzg
construct_girl_info_nzg <-
function( girl_link, sleep_time = 2){
## start page
remDr$navigate(girl_link)
Sys.sleep(sleep_time )
## get about me info
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
## to a data frame
tmp_price <-
lapply(strsplit( price_text, "\n"),
function(i_price){
tmp_col <- i_price[1]
tmp_value <- i_price[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_price <- bind_cols(tmp_price)
return( bind_cols(tmp_dtf_girl_about_me,
tmp_dtf_price) )
}
no_of_girls = 20
## clean the data a bit
dtf_links_all_girls_cl <-
dtf_links_all_girls %>%
dplyr::filter( girl_id != "escorts" ) %>%  ## agency ad
dplyr::filter( !grepl("nzpc",girl_id ) ) ## NZPC ad
##
tmp_girl_list <- NULL
no_of_girls <- nrow(dtf_links_all_girls_cl)
for(i in 1:no_of_girls){
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_about_me <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
tmp_girl_list[[i]] <-
bind_cols(dtf_links_all_girls_cl[i,c("girl_id","region")],
tmp_dtf_girl_about_me)
}
dtf_girls_info <- bind_rows(tmp_girl_list)
View(dtf_girls_info)
## load data
load("data_intermediate/dtf_links_all_girls.rda")
## clean the data a bit
dtf_links_all_girls_cl <-
dtf_links_all_girls %>%
dplyr::filter( girl_id != "escorts" ) %>%  ## agency ad
dplyr::filter( !grepl("nzpc",girl_id ) ) ## NZPC ad
##
tmp_girl_list <- NULL
no_of_girls <- nrow(dtf_links_all_girls_cl)
View(dtf_links_all_girls_cl)
i=4
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_about_me <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
price_element_raw
length(price_element_raw)
class(price_element_raw)
i=1
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_about_me <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
tmp_dtf_abm
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
length(price_element_raw)
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
price_text
lapply(strsplit( price_text, "\n"),
function(i_price){
tmp_col <- i_price[1]
tmp_value <- i_price[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_price <-
lapply(strsplit( price_text, "\n"),
function(i_price){
tmp_col <- i_price[1]
tmp_value <- i_price[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_price <- bind_cols(tmp_price)
View(tmp_dtf_price)
tmp_price
price_text
load("data_intermediate/dtf_links_all_girls.rda")
## clean the data a bit
dtf_links_all_girls_cl <-
dtf_links_all_girls %>%
dplyr::filter( girl_id != "escorts" ) %>%  ## agency ad
dplyr::filter( !grepl("nzpc",girl_id ) ) ## NZPC ad
##
tmp_girl_list <- NULL
no_of_girls <- nrow(dtf_links_all_girls_cl)
i=1
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
price_element_raw
length(price_element_raw) >0
## get about me info
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
tmp_dtf_abm
## get price info
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
price_text
## construct girls info from nzg
construct_girl_info_nzg <-
function( girl_link, sleep_time = 2){
## start page
remDr$navigate(girl_link)
Sys.sleep(sleep_time )
## test if the page has price info
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
## if price info is available
if( length(price_element_raw) >0 ){
## get about me info
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
## get price info
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
## to a data frame
tmp_price <-
lapply(strsplit( price_text, "\n"),
function(i_price){
tmp_col <- i_price[1]
tmp_value <- i_price[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_price <- bind_cols(tmp_price)
}
return( list( about_me = tmp_dtf_girl_about_me,
price = tmp_dtf_price ) )
}
## construct girls info from nzg
construct_girl_info_nzg <-
function( girl_link, sleep_time = 2){
## start page
remDr$navigate(girl_link)
Sys.sleep(sleep_time )
## test if the page has price info
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
## if price info is available
if( length(price_element_raw) >0 ){
## get about me info
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
## get price info
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
# ## to a data frame
# tmp_price <-
#    lapply(strsplit( price_text, "\n"),
#           function(i_price){
#              tmp_col <- i_price[1]
#              tmp_value <- i_price[2]
#
#              tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
#              colnames(tmp_dtf) <- tolower(tmp_col)
#
#              return( tmp_dtf )
#           })
#
# tmp_dtf_price <- bind_cols(tmp_price)
}
return( list( about_me = tmp_dtf_girl_about_me,
price = price_text ) )
}
no_of_girls = 10
i=1
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_about_me <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
## construct girls info from nzg
construct_girl_info_nzg <-
function( girl_link, sleep_time = 2){
## start page
remDr$navigate(girl_link)
Sys.sleep(sleep_time )
## test if the page has price info
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
## if price info is available
if( length(price_element_raw) >0 ){
## get about me info
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
## get price info
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
# ## to a data frame
# tmp_price <-
#    lapply(strsplit( price_text, "\n"),
#           function(i_price){
#              tmp_col <- i_price[1]
#              tmp_value <- i_price[2]
#
#              tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
#              colnames(tmp_dtf) <- tolower(tmp_col)
#
#              return( tmp_dtf )
#           })
#
# tmp_dtf_price <- bind_cols(tmp_price)
}
return( list( about_me =  tmp_dtf_abm,
price = price_text ) )
}
## construct girls info from nzg
construct_girl_info_nzg <-
function( girl_link, sleep_time = 2){
## start page
remDr$navigate(girl_link)
Sys.sleep(sleep_time )
## test if the page has price info
## get price info
price_element_raw <-
remDr$findElements(using = "css selector", ".price-list")
## if price info is available
if( length(price_element_raw) >0 ){
## get about me info
about_me_element <- remDr$findElements(using = "css selector", ".row.gap")
## find about me
about_me_text <-unlist(lapply( about_me_element,
function(i_girl){
i_girl$getElementText()
} ))
## to a data frame
tmp_abm <-
lapply(strsplit( about_me_text, "\n"),
function(i_abm){
tmp_col <- i_abm[1]
tmp_value <- i_abm[2]
tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
colnames(tmp_dtf) <- tolower(tmp_col)
return( tmp_dtf )
})
tmp_dtf_abm <- bind_cols(tmp_abm)
## get price info
price_element <-
price_element_raw[[1]]$findChildElements("css selector", ".row")
## find about me
price_text <-unlist(lapply( price_element,
function(i_price){
i_price$getElementText()
} ))
# ## to a data frame
# tmp_price <-
#    lapply(strsplit( price_text, "\n"),
#           function(i_price){
#              tmp_col <- i_price[1]
#              tmp_value <- i_price[2]
#
#              tmp_dtf <- as.data.frame(t(as.matrix(tmp_value)))
#              colnames(tmp_dtf) <- tolower(tmp_col)
#
#              return( tmp_dtf )
#           })
#
# tmp_dtf_price <- bind_cols(tmp_price)
}
return( list( about_me =  tmp_dtf_abm,
price = price_text ) )
}
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_about_me <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
tmp_dtf_girl_about_me[[1]]
tmp_dtf_girl_about_me[[2]]
for(i in 1:no_of_girls){
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_info <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
tmp_girl_list[[i]] <-
bind_cols(dtf_links_all_girls_cl[i,c("girl_id","region")],
tmp_dtf_girl_info[["about_me"]])
}
dtf_girls_info <- bind_rows(tmp_girl_list)
View(dtf_girls_info)
for(i in 1:no_of_girls){
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_info <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
tmp_girl_abm_list[[i]] <-
bind_cols(dtf_links_all_girls_cl[i,c("girl_id","region")],
tmp_dtf_girl_info[["about_me"]])
tmp_gril_price_list[[i]] <-
tmp_dtf_girl_info[["price"]]
}
tmp_girl_abm_list <- NULL
tmp_gril_price_list <- NULL
no_of_girls <- nrow(dtf_links_all_girls_cl)
no_of_girls = 10
for(i in 1:no_of_girls){
print(paste0(i, " out of ", no_of_girls) )
tmp_girl_link <-
dtf_links_all_girls_cl$url_girl[i]
tmp_dtf_girl_info <-
construct_girl_info_nzg(tmp_girl_link, sleep_time = 0)
tmp_girl_abm_list[[i]] <-
bind_cols(dtf_links_all_girls_cl[i,c("girl_id","region")],
tmp_dtf_girl_info[["about_me"]])
tmp_gril_price_list[[i]] <-
tmp_dtf_girl_info[["price"]]
}
View(tmp_gril_price_list)
tmp_gril_price_list
dtf_girls_abm <- bind_rows(tmp_girl_abm_list)
bind_rows(tmp_gril_price_list)
bind_cols(tmp_gril_price_list)
bind(tmp_gril_price_list)
unlist(tmp_gril_price_list)
