remDr$navigate("http://www.google.com/ncr")
remdr <- remoteDriver()
remDr
require(RSelenium)
remDr <- remoteDriver(browserName = "chrome")
remDr$open()
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "chrome"
)
remDr$open()
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444,
browserName = "chrome"
)
remDr$open()
require(RSelenium)
remDr <- remoteDriver(browserName = "chrome")
remDr$open()
require(RSelenium)
remDr <- remoteDriver(browserName = "chrome")
remDr$open()
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "firefox"
)
remDr$open()
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "firefox"
)
remDr$open()
remDr
remDr$getStatus()
remDr$navigate("http://www.bbc.co.uk")
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "firefox"
)
remDr$open()
library(RSelenium)
library(wdman)
library(netstat)
selenium()
selenium_object <- selenium(retcommand = T, check=F)
selenium_object
selenium_object <- selenium(retcommand = T, check=F)
selenium_object
binman::list_versions("chromedriver")
remote_driver <- rsDriver(browser = "chrome",
chromever = "113.0.5672.630",
verbose = F,
port = free_port())
library(RSelenium)
library(wdman)
library(netstat)
selenium()
selenium_object <- selenium(retcommand = T, check=F)
binman::list_versions("chromedriver")
remote_driver <- rsDriver(browser = "chrome",
chromever = "113.0.5672.630",
verbose = F,
port = free_port())
remote_driver <- rsDriver(browser = "chrome",
chromever = "113.0.5672.630")
remote_driver <- rsDriver(browser = "chrome",
chromever = "113.0.5672.63")
remote_driver <-
rsDriver(browser = "chrome",
chromever = "113.0.5672.63",
port = free_ports())
free_ports()
remote_driver <-
rsDriver(browser = "chrome",
chromever = "113.0.5672.63",
port = netstat::free_ports())
netstat::free_ports()
?free_port
remote_driver <-
rsDriver(browser = "chrome",
chromever = "113.0.5672.63",
port = netstat::free_port())
free_port()
?free_port
?free_port
free_port()
free_port()
remote_driver <-
rsDriver(browser = "chrome",
chromever = "113.0.5672.63")
binman::list_versions("chromedriver")
remote_driver <-
rsDriver(browser = "firefox")
remote_driver <-
rsDriver(browser = "firefox")
remote_driver <-
rsDriver(browser = "firefox",
port = 4445L)
remote_driver$server$stop()
remote_driver <-
rsDriver(browser = "firefox",
port = 4445L)
remDr <- remote_driver$client
remDr$open()
remDr$navigate("https://www.6park.com")
remDr$navigate("https://www.newzealandgirls.co.nz")
remote_driver$server$stop()
library(RSelenium)
library(wdman)
library(netstat)
selenium_object <- selenium(retcommand = T, check=F)
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
remote_driver$server$stop()
remDr <- remote_driver$client
remDr$open()
remDr$navigate("https://www.6park.com")
remDr
remDr$open()
remDr$open()
library(RSelenium)
library(wdman)
library(netstat)
selenium_object <- selenium(retcommand = T, check=F)
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
remDr <- remote_driver$client
remDr$open()
remDr$navigate("https://www.6park.com")
?remDr$findElements
remDr$navigate("https://www.newzealandgirls.co.nz")
remDr$navigate("https://www.newzealandgirls.co.nz/auckland/escorts/nzgirls.php")
## Close the web browser and stop the server
remDr$close()
remote_driver$server$stop()
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
## Client side web driver
remDr <- remote_driver$client
remDr$navigate("https://www.newzealandgirls.co.nz/auckland/escorts/nzgirls.php")
remDr$findElements(using ='class', 'version-ESV' )
remDr$findElements(using ='class', 'wrap-link esc-link ' )
remDr$findElements('class', 'wrap-link esc-link ' )
remDr$findElement(using = "class", "wrap-link esc-link ")
remDr$findElement(using = "class", value = "wrap-link esc-link ")
## navigate to sites
remDr$navigate("https://www.6park.com")
## navigate to sites
remDr$navigate("https://www.geeksforgeeks.org/")
remDr$$findElement(using = 'class name',
remDr$findElement(using = 'class name',value = 'gfg-icon_translate')
## Close the web browser and stop the server
remDr$close()
remDr$findElement(using = 'class name',value = 'gfg-icon_translate')
## Client side web driver
remDr <- remote_driver$client
## navigate to sites
remDr$navigate("https://www.geeksforgeeks.org/")
## Close the web browser and stop the server
remDr$close()
remote_driver$server$stop()
## load libraries
library(RSelenium)
library(wdman)
library(netstat)
## download, install and check need softwares
selenium_object <- selenium(retcommand = T, check=F)
## start the web driver
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
## Client side web driver
remDr <- remote_driver$client
## navigate to sites
remDr$navigate("https://www.geeksforgeeks.org/")
remDr$findElement(using = 'class name',value = 'gfg-icon_translate')
## navigate to sites
remDr$navigate("https://www.geeksforgeeks.org/")
## navigate to sites
remDr$navigate("https://www.r-bloggers.com/")
remDr$findElement(using = 'class name',value = 'loop-title')
tmp <- $findElement(using = 'class name',value = 'loop-title')
tmp <- remDr$findElement(using = 'class name',value = 'loop-title')
tmp
tmp <- remDr$findElements(using = 'class name',value = 'loop-title')
tmp
print(tmp)
tmp$getElements
tmp$getElements()
remDr$navigate("https://www.bbc.com/news")
article_links <- remDr$findElements(using = "css", "#top-story a")
article_links
article_links
## navigate to sites
remDr$navigate("https://www.r-bloggers.com/")
tmp <- remDr$findElements(using = 'class name',value = 'loop-title')
## Close the web browser and stop the server
remDr$close()
remote_driver$server$stop()
remote_driver$server$stop()
remote_driver$server$stop()
source(".Rprofile") # it is necessary to run when start from outside Rstudio, and no harm to run it again
## read urls
source("grooming_code/read_urls.R")
View(urls_all)
###########################################################################
rm(list= ls())
Sys.setlocale("LC_TIME", "C")
## set up R environment ---------------------------------------------------
#PrefLibPaths <- "P:/R/libraries/3.3.2-20170925"
#source("P:/R/common.Rprofile")
#source("P:/R/common.Rprofile.dev.R")
###########################################################################
### make sure open in Chrome
options(browser = "C:/Program Files (x86)/Google/Chrome/Application/chrome.exe")
#.libPaths("P:/R/libraries/3.3.2-20170925")
#Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_361')
###########################################################################
## load R libraries -------------------------------------------------------
.libPaths("C:/Users/Public/R/4.4.2")
library(lubridate)
library(stringr)
library(shiny)
library(utils)
library(dplyr)
library(tidyr)
library(zoo)
library(shinydashboard)
library(DT)
library(highcharter)
library(rvest)
library(magrittr)
library(rjson)
library(RSelenium)
library(wdman)
library(netstat)
library(stringr)
## load user defined functions
source("R/utility.R")
## download, install and check need softwares
selenium_object <- selenium(retcommand = T, check=F)
##################################################
## 0.0 set environment ---------------------------
## set R, load user defined functions and some global variables
source(".Rprofile") # it is necessary to run when start from outside Rstudio, and no harm to run it again
## read urls
source("grooming_code/read_urls.R")
View(urls_nzg)
View(urls_nzg)
View(urls_all)
## start the web driver
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
## Client side web driver
remDr <- remote_driver$client
##
tmp_links <- list()
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
nrow(urls_nzg)
i=1
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]]
tmp_links
tmp_links <- NULL
tmp_links[[i]]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
nzg_page_construct(tmp_url_region)
## read urls
source("grooming_code/read_urls.R")
## start the web driver
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
## Client side web driver
remDr <- remote_driver$client
##
tmp_links <- NULL
## utility functions
## based on the reginoal url to construct all pages
nzg_page_construct <-
function( region_base_url, sleep_time = 2 ){
remDr$navigate(url)
Sys.sleep(sleep_time )
more_page <- remDr$findElements(using = 'class name',value = 'more-pages-menu')
tmp_page_txt <- more_page[[1]]$getElementText()[[1]]
tmp_page_num <- str_extract_all(tmp_page_txt, "\\d+")[[1]]
tmp_page_num_ind <- strsplit(tmp_page_num, split = "")[[1]]
tmp_page_num_ind <- tmp_page_num_ind[1:(length(tmp_page_num_ind)-1)]
tmp_all_links <- paste0(region_base_url, "?pos=", tmp_page_num_ind)
return(tmp_all_links)
}
i=1
tmp_url_region <- urls_nzg$urls[i]
tmp_url_region
nzg_page_construct(tmp_url_region)
nzg_page_construct(tmp_url_region)
## utility functions
## based on the reginoal url to construct all pages
nzg_page_construct <-
function( region_base_url, sleep_time = 2 ){
remDr$navigate(region_base_url)
Sys.sleep(sleep_time )
more_page <- remDr$findElements(using = 'class name',value = 'more-pages-menu')
tmp_page_txt <- more_page[[1]]$getElementText()[[1]]
tmp_page_num <- str_extract_all(tmp_page_txt, "\\d+")[[1]]
tmp_page_num_ind <- strsplit(tmp_page_num, split = "")[[1]]
tmp_page_num_ind <- tmp_page_num_ind[1:(length(tmp_page_num_ind)-1)]
tmp_all_links <- paste0(region_base_url, "?pos=", tmp_page_num_ind)
return(tmp_all_links)
}
nzg_page_construct(tmp_url_region)
##
tmp_links <- NULL
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
i
tmp_url_region
nzg_page_construct(tmp_url_region)
region_base_url = tmp_url_region
more_page <- remDr$findElements(using = 'class name',value = 'more-pages-menu')
more_page
more_page[[1]]$getElementText()[[1]]
## based on the reginoal url to construct all pages
nzg_page_construct <-
function( region_base_url, sleep_time = 2 ){
remDr$navigate(region_base_url)
Sys.sleep(sleep_time )
more_page <- remDr$findElements(using = 'class name',value = 'more-pages-menu')
tmp_page_txt <- more_page[[1]]$getElementText()[[1]]
if(tmp_page_txt != ""){
tmp_page_num <- str_extract_all(tmp_page_txt, "\\d+")[[1]]
tmp_page_num_ind <- strsplit(tmp_page_num, split = "")[[1]]
tmp_page_num_ind <- tmp_page_num_ind[1:(length(tmp_page_num_ind)-1)]
tmp_all_links <- paste0(region_base_url, "?pos=", tmp_page_num_ind)
return(tmp_all_links)
}else{
return(NULL)
}
}
##
tmp_links <- NULL
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
tmp_links
## utility functions
## based on the reginoal url to construct all pages
nzg_page_construct <-
function( region_base_url, sleep_time = 2 ){
remDr$navigate(region_base_url)
Sys.sleep(sleep_time )
more_page <- remDr$findElements(using = 'class name',value = 'more-pages-menu')
tmp_page_txt <- more_page[[1]]$getElementText()[[1]]
if(tmp_page_txt != ""){
tmp_page_num <- str_extract_all(tmp_page_txt, "\\d+")[[1]]
tmp_page_num_ind <- strsplit(tmp_page_num, split = "")[[1]]
tmp_page_num_ind <- tmp_page_num_ind[1:(length(tmp_page_num_ind)-1)]
tmp_all_links <- paste0(region_base_url, "?pos=", tmp_page_num_ind)
return( c(region_base_url, tmp_all_links) )
}else{
return(region_base_url)
}
}
links_all_regions <-
bind_rows(tmp_links)
unlist(tmp_links)
tmp_links <- NULL
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
## all regional links
links_all_regions <-
unlist(tmp_links)
links_all_regions
source(".Rprofile") # it is necessary to run when start from outside Rstudio, and no harm to run it again
## read urls
source("grooming_code/read_urls.R")
strsplit(links_all_regions, "/")
## find all links on nzg by region
tmp_links <- NULL
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
### construct all links from nzg
## start the web driver
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
## Client side web driver
remDr <- remote_driver$client
## find all links on nzg by region
tmp_links <- NULL
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
## all regional links
links_all_regions <-
unlist(tmp_links)
strsplit(links_all_regions, "/")
strsplit(links_all_regions, "/")[[4]]
strsplit(links_all_regions, "/")[1]
strsplit(links_all_regions, "/")[[1]][1]
strsplit(links_all_regions, "/")[[1]][4]
lapply(strsplit(links_all_regions, "/"),
function( i_str ) {
tmp_region <- i_str[4]
}
)
unlist(lapply(strsplit(links_all_regions, "/"),
function( i_str ) {
tmp_region <- i_str[4]
}
))
##
dtf_links_all_regions <-
data.frame(url_region = links_all_regions,
region = unlist(lapply(strsplit(links_all_regions, "/"),
function( i_str ) {
tmp_region <- i_str[4]
}
))
)
View(dtf_links_all_regions)
?local
##################################################
## 0.0 set environment ---------------------------
## set R, load user defined functions and some global variables
source(".Rprofile") # it is necessary to run when start from outside Rstudio, and no harm to run it again
## read urls
source("grooming_code/read_urls.R")
### construct all links from nzg
local({
## start the web driver
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
## Client side web driver
remDr <- remote_driver$client
## find all links on nzg by region
tmp_links <- NULL
for(i in 1:nrow(urls_nzg)){
tmp_url_region <- urls_nzg$urls[i]
tmp_links[[i]] <- nzg_page_construct(tmp_url_region)
}
## all regional links
links_all_regions <-
unlist(tmp_links)
##
dtf_links_all_regions <-
data.frame(url_region = links_all_regions,
region = unlist(lapply(strsplit(links_all_regions, "/"),
function( i_str ) {
tmp_region <- i_str[4]
}
))
)
save(dtf_links_all_regions, file = "data_intermediate/dtf_links_all_regions.rda")
})
remote_driver$server$stop()
remote_driver$server$stop()
remote_driver <-
rsDriver(browser = "firefox",
verbose = F,
port = 4445L)
remote_driver$server$stop()
##################################################
## 0.0 set environment ---------------------------
## set R, load user defined functions and some global variables
source(".Rprofile") # it is necessary to run when start from outside Rstudio, and no harm to run it again
## read urls
source("grooming_code/read_urls.R")
## consturct all region links in nzg
source("grooming_code/construct_regional_links_nzg.R")
##################################################
## 0.0 set environment ---------------------------
## set R, load user defined functions and some global variables
source(".Rprofile") # it is necessary to run when start from outside Rstudio, and no harm to run it again
